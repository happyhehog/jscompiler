ProgramNode (1:0, 3:28)
    DoWhileStatementNode (1:0, 3:28)
    --> test expression:
        LogicalExpressionNode (3:9, 3:26) { operator: || }
        --> left operand:
            BinaryExpressionNode (3:9, 3:15) { operator: === }
            --> left operand:
                IdentifierNode (3:9, 3:9) : { name: a }
            --> right operand:
                LiteralNode (3:15, 3:15) : { value: 1 }
        --> right operand:
            BinaryExpressionNode (3:20, 3:26) { operator: === }
            --> left operand:
                IdentifierNode (3:20, 3:20) : { name: b }
            --> right operand:
                LiteralNode (3:26, 3:26) : { value: 2 }
    --> loop body:
        BlockStatementNode (1:3, 3:0)
            CallExpressionNode (2:4, 2:17)
            --> callable:
                MemberExpressionNode (2:4, 2:12) { computed: false }
                --> object:
                    IdentifierNode (2:4, 2:4) : { name: console }
                --> property:
                    IdentifierNode (2:12, 2:12) : { name: log }
            --> arguments:
                IdentifierNode (2:16, 2:16) : { name: a }