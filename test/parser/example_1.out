(program (sourceElements (sourceElement (statement (variableStatement var (variableDeclarationList (variableDeclaration a) , (variableDeclaration b (initialiser = (singleExpression (literal (numericLiteral 3)))))) (eos ;)))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) = (expressionSequence (singleExpression b))))))) (sourceElement (statement (emptyStatement ;))) (sourceElement (statement (iterationStatement while ( (expressionSequence (singleExpression (singleExpression a) === (singleExpression b))) ) (statement (block { (statementList (statement (expressionStatement (expressionSequence (singleExpression (singleExpression a) ++)))) (statement (emptyStatement ;)) (statement (expressionStatement (expressionSequence (singleExpression ++ (singleExpression b))))) (statement (emptyStatement ;)) (statement (breakStatement break (eos ;)))) }))))) (sourceElement (functionDeclaration function sum ( (formalParameterList a , b) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression a) + (singleExpression b))) (eos ;)))))) })) (sourceElement (statement (variableStatement var (variableDeclarationList (variableDeclaration sum2 (initialiser = (singleExpression function ( (formalParameterList a , b) ) { (functionBody (sourceElements (sourceElement (statement (returnStatement return (expressionSequence (singleExpression (singleExpression (literal (numericLiteral 2))) * (singleExpression ( (expressionSequence (singleExpression (singleExpression a) + (singleExpression b))) )))) (eos ;)))))) })))) eos))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression console) . (identifierName log)) (arguments ( (argumentList (singleExpression (singleExpression sum) (arguments ( (argumentList (singleExpression a) , (singleExpression b)) )))) ))))))) (sourceElement (statement (emptyStatement ;))) (sourceElement (statement (expressionStatement (expressionSequence (singleExpression (singleExpression (singleExpression console) . (identifierName log)) (arguments ( (argumentList (singleExpression (singleExpression sum2) (arguments ( (argumentList (singleExpression a) , (singleExpression b)) )))) ))))))) (sourceElement (statement (emptyStatement ;)))) <EOF>)